C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C The Stoichiometric Chemical Model File                           
C                                                                  
C Generated by KPP-3.0.0-rc.2 symbolic chemistry Kinetics PreProcessor
C       (https:/github.com/KineticPreProcessor/KPP                 
C KPP is distributed under GPL, the general public licence         
C       (http://www.gnu.org/copyleft/gpl.html)                     
C (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa           
C (C) 1997-2022, A. Sandu, Michigan Tech, Virginia Tech            
C     With important contributions from:                           
C        M. Damian,   Villanova University, Philadelphia, PA, USA  
C        R. Sander,   Max-Planck Institute for Chemistry, Mainz, Germany
C        M. Long,     Renaissance Fiber, LLC, North Carolina, USA  
C        H. Lin,      Harvard University, Cambridge, MA, USA       
C        R. Yantosca, Harvard University, Cambridge, MA, USA       
C                                                                  
C File                 : small_strato_Stoichiom.f                  
C Equation file        : small_strato.def                          
C Output root filename : small_strato                              
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C ReactantProd - Reactant Products in each equation                
C   Arguments :                                                    
C      V         - Concentrations of variable species (local)      
C      F         - Concentrations of fixed species (local)         
C      ARP       - Reactant product in each equation               
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE ReactantProd ( V, F, ARP )

      IMPLICIT NONE
      INCLUDE 'small_strato_Parameters.h'

C V - Concentrations of variable species (local)                   
      REAL*8 V(NVAR)
C F - Concentrations of fixed species (local)                      
      REAL*8 F(NFIX)
C ARP - Reactant product in each equation                          
      REAL*8 ARP(NREACT)


C Reactant Products in each equation are useful in the             
C     stoichiometric formulation of mass action law                
      ARP(1) = F(2)
      ARP(2) = V(2)*F(2)
      ARP(3) = V(3)
      ARP(4) = V(2)*V(3)
      ARP(5) = V(3)
      ARP(6) = V(1)*F(1)
      ARP(7) = V(1)*V(3)
      ARP(8) = V(3)*V(4)
      ARP(9) = V(2)*V(5)
      ARP(10) = V(5)
      RETURN
      END

C End of ReactantProd function                                     
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C JacReactantProd - Jacobian of Reactant Products vector           
C   Arguments :                                                    
C      V         - Concentrations of variable species (local)      
C      F         - Concentrations of fixed species (local)         
C      JVRP      - d ARP(1:NREACT)/d VAR (1:NVAR)                  
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE JacReactantProd ( V, F, JVRP )

      IMPLICIT NONE
      INCLUDE 'small_strato_Parameters.h'

C V - Concentrations of variable species (local)                   
      REAL*8 V(NVAR)
C F - Concentrations of fixed species (local)                      
      REAL*8 F(NFIX)
C JVRP - d ARP(1:NREACT)/d VAR (1:NVAR)                            
      REAL*8 JVRP(NJVRP)


C Reactant Products in each equation are useful in the             
C    stoichiometric formulation of mass action law                 
C Below we compute the Jacobian of the Reactant Products vector    
C    w.r.t. variable species: d ARP(1:NREACT) / d Var(1:NVAR)      

C JVRP(1) = dARP(2)/dV(2)                                          
      JVRP(1) = F(2)
C JVRP(2) = dARP(3)/dV(3)                                          
      JVRP(2) = 1
C JVRP(3) = dARP(4)/dV(2)                                          
      JVRP(3) = V(3)
C JVRP(4) = dARP(4)/dV(3)                                          
      JVRP(4) = V(2)
C JVRP(5) = dARP(5)/dV(3)                                          
      JVRP(5) = 1
C JVRP(6) = dARP(6)/dV(1)                                          
      JVRP(6) = F(1)
C JVRP(7) = dARP(7)/dV(1)                                          
      JVRP(7) = V(3)
C JVRP(8) = dARP(7)/dV(3)                                          
      JVRP(8) = V(1)
C JVRP(9) = dARP(8)/dV(3)                                          
      JVRP(9) = V(4)
C JVRP(10) = dARP(8)/dV(4)                                         
      JVRP(10) = V(3)
C JVRP(11) = dARP(9)/dV(2)                                         
      JVRP(11) = V(5)
C JVRP(12) = dARP(9)/dV(5)                                         
      JVRP(12) = V(2)
C JVRP(13) = dARP(10)/dV(5)                                        
      JVRP(13) = 1
      RETURN
      END

C End of JacReactantProd function                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



C Begin Derivative w.r.t. Rate Coefficients                        

C ------------------------------------------------------------------------------
C Subroutine for the derivative of Fun with respect to rate coefficients
C -----------------------------------------------------------------------------

      SUBROUTINE  dFun_dRcoeff( V, F, NCOEFF, JCOEFF, DFDR )
       
      IMPLICIT NONE 
      INCLUDE 'small_strato_Parameters.h'
      INCLUDE 'small_strato_Sparse.h'

C V - Concentrations of variable/radical/fixed species            
      REAL*8 V(NVAR), F(NFIX)
C NCOEFF - the number of rate coefficients with respect to which we differentiate
      INTEGER NCOEFF       
C JCOEFF - a vector of integers containing the indices of reactions (rate
C          coefficients) with respect to which we differentiate
      INTEGER JCOEFF(NCOEFF)       
C DFDR  - a matrix containg derivative values; specifically, 
C         column j contains d Fun(1:NVAR) / d RCT( JCOEFF(j) )
C         for each 1 <= j <= NCOEFF
C         This matrix is stored in a column-wise linearized format
      REAL*8 DFDR(NVAR*NCOEFF)

C Local vector with reactant products
      REAL*8 A_RPROD(NREACT)
      REAL*8 aj
      INTEGER i,j,k
      
C Compute the reactant products of all reactions     
      CALL ReactantProd ( V, F, A_RPROD )

C Compute the derivatives by multiplying column JCOEFF(j) of the stoichiometric matrix with A_RPROD       
      DO j=1,NCOEFF
C                  Initialize the j-th column of derivative matrix to zero       
         DO i=1,NVAR
           DFDR(i+NVAR*(j-1)) = 0.0D0
         END DO
C                  Column JCOEFF(j) in the stoichiometric matrix times the
C                  reactant product  of the JCOEFF(j)-th reaction      
C                  give the j-th column of the derivative matrix   
         aj = A_RPROD(JCOEFF(j))
         DO k=CCOL_STOICM(JCOEFF(j)),CCOL_STOICM(JCOEFF(j)+1)-1
           DFDR(IROW_STOICM(k)+NVAR*(j-1)) = STOICM(k)*aj
         END DO
      END DO
      
      RETURN
      END

C End Derivative w.r.t. Rate Coefficients                          


C Begin Jacobian Derivative w.r.t. Rate Coefficients               

C ------------------------------------------------------------------------------
C Subroutine for the derivative of Jac with respect to rate coefficients
C Times a user vector
C -----------------------------------------------------------------------------

      SUBROUTINE  dJac_dRcoeff( V, F, U, NCOEFF, JCOEFF, DJDR )
       
      IMPLICIT NONE 
      INCLUDE 'small_strato_Parameters.h'
      INCLUDE 'small_strato_Sparse.h'

C V - Concentrations of variable/radical/fixed species            
      REAL*8 V(NVAR), F(NFIX)
C U - User-supplied Vector           
      REAL*8 U(NVAR)
C NCOEFF - the number of rate coefficients with respect to which we differentiate
      INTEGER NCOEFF       
C JCOEFF - a vector of integers containing the indices of reactions (rate
C          coefficients) with respect to which we differentiate
      INTEGER JCOEFF(NCOEFF)       
C DFDR  - a matrix containg derivative values; specifically, 
C         column j contains d Jac(1:NVAR) / d RCT( JCOEFF(j) ) * U
C                     for each 1 <= j <= NCOEFF
C         This matrix is stored in a column-wise linearized format
      REAL*8 DJDR(NVAR*NCOEFF)

C Local vector for Jacobian of reactant products
      REAL*8 JV_RPROD(NJVRP)
      REAL*8 aj
      INTEGER i,j,k
      
C Compute the Jacobian of all reactant products   
      CALL JacReactantProd( V, F, JV_RPROD )

C Compute the derivatives by multiplying column JCOEFF(j) of the stoichiometric matrix with A_PROD       
      DO j=1,NCOEFF
C                  Initialize the j-th column of derivative matrix to zero       
         DO i=1,NVAR
           DJDR(i+NVAR*(j-1)) = 0.0D0
         END DO
C                  Column JCOEFF(j) in the stoichiometric matrix times the
C                  ( Gradient of reactant product of the JCOEFF(j)-th reaction X user vector )    
C                  give the j-th column of the derivative matrix   
C
C          Row JCOEFF(j) of JV_RPROD times the user vector
         aj = 0.d0
         DO k=CROW_JVRP(JCOEFF(j)),CROW_JVRP(JCOEFF(j)+1)-1
	    aj = aj + JV_RPROD(k)*U(ICOL_JVRP(k))
	 END DO
C          Column JCOEFF(j) of Stoichiom. matrix times aj         
         DO k=CCOL_STOICM(JCOEFF(j)),CCOL_STOICM(JCOEFF(j)+1)-1
           DJDR(IROW_STOICM(k)+NVAR*(j-1)) = STOICM(k)*aj
         END DO
      END DO
      
      RETURN
      END

C End Jacobian Derivative w.r.t. Rate Coefficients                 

